import asyncio

import json

from Data_base.database import del_boots, get_size

from aiogram import F, Router, exceptions, types
from aiogram.filters import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.utils.media_group import MediaGroupBuilder

from buttons import DelCallbackFactory, get_buttons_del

from loader import admins

from logger import get_logger

admin_del_router = Router()
logger = get_logger('admin_del')


@admin_del_router.message(Command('adm_menu'), F.from_user.id.in_(admins))
async def admin_menu(message: types.Message):
    await message.answer(text='–í—ã–±–µ—Ä–∏ —Ä–∞–∑–º–µ—Ä, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—á–µ—à—å –ø—Ä–æ–≤–µ—Å—Ç–∏ —É–¥–∞–ª–µ–Ω–∏—è.', reply_markup=get_buttons_del())


@admin_del_router.callback_query(DelCallbackFactory.filter())
async def del_info(
        callback: types.CallbackQuery,
        callback_data: DelCallbackFactory):
    res = await get_size(callback_data.value_size, callback_data.value_sm)
    await callback.message.delete()
    if res:
        await callback.answer()
        for row in res:
            photo = json.loads(row[1])
            videos = json.loads(row[2])
            builder = InlineKeyboardBuilder()
            media = MediaGroupBuilder(
                caption=f'{row[3]}\n'
                        f'üîõSize: {row[4]}({row[5]} —Å–º)\n'
                        f'üîùCondition: {row[6]}/10\n'
                        f'üí∞Price: {row[7]} UAN\n'
                        f'–í–æ–ø—Ä–æ—Å—ã –∏ –∑–∞–∫–∞–∑—ã -> @Yaroslav_2500'
            )
            if photo:
                for i in photo:
                    media.add_photo(i)
            if videos:
                for i in videos:
                    media.add_video(i)
            builder.add(types.InlineKeyboardButton(
                text='–£–¥–∞–ª–∏—Ç—å.',
                callback_data=f'del {row[0]}'
            ))
            try:
                await callback.message.answer_media_group(media=media.build())
                await callback.message.answer(text='‚¨ÜÔ∏è‚¨ÜÔ∏è‚¨ÜÔ∏è', reply_markup=builder.as_markup())
                await asyncio.sleep(delay=2)
            except Exception or exceptions.TelegramAPIError as e:
                logger.critical(f'–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –≤—ã–≥—Ä—É–∑–∏—Ç—å –≤—Å–µ –ø–æ—Å—Ç—ã! {e}')
                await callback.message.answer(text='–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –≤—ã–≥—Ä—É–∑–∏—Ç—å –≤—Å–µ! –ï—Å—Ç—å –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞!')
        await callback.message.answer(text='–ß—Ç–æ –±—ã —Å–Ω–æ–≤–∞ –ø–æ–ª—É—á–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Ä–∞–∑–º–µ—Ä—ã, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ'
                                           '–≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É: \n /adm_menu')
    else:
        await callback.message.answer(text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –¥–∞–Ω–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ –ø–æ–∫–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏.')
        await callback.message.answer(text='–ß—Ç–æ –±—ã —Å–Ω–æ–≤–∞ –ø–æ–ª—É—á–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Ä–∞–∑–º–µ—Ä—ã, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ'
                                           '–≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É: \n /adm_menu')


@admin_del_router.callback_query(F.data.startswith('del '))
async def del_data(callback: types.CallbackQuery):
    pk = callback.data.replace('del ', '')
    res = await del_boots(pk)
    if res:
        await callback.message.bot.delete_message(chat_id=callback.message.chat.id,
                                                  message_id=callback.message.message_id)
    else:
        await callback.message.answer(text='–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ —Å —É–¥–∞–ª–µ–Ω–∏–µ–º!')
