import asyncio

import json

from Data_base.database import get_size

from aiogram import Router, exceptions, types
from aiogram.filters import Command
from aiogram.utils.media_group import MediaGroupBuilder

from buttons.button_for_size import SizesCallbackFactory, get_buttons_size

from logger import get_logger


user_router = Router()
logger = get_logger('users')


@user_router.message(Command('menu'))
async def menu(message: types.Message):
    await message.answer(text='–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç.', reply_markup=get_buttons_size())


@user_router.callback_query(SizesCallbackFactory.filter())
async def send_all_products(
        callback: types.CallbackQuery,
        callback_data: SizesCallbackFactory):
    res = await get_size(callback_data.value_size, callback_data.value_sm)
    await callback.message.delete()
    if res:
        await callback.answer()
        for row in res:
            photo = json.loads(row[1])
            videos = json.loads(row[2])
            media = MediaGroupBuilder(
                caption=f'{row[3]}\n'
                        f'üîõSize: {row[4]}({row[5]} —Å–º)\n'
                        f'üîùCondition: {row[6]}/10\n'
                        f'üí∞Price: {row[7]} UAN\n'
                        f'–í–æ–ø—Ä–æ—Å—ã –∏ –∑–∞–∫–∞–∑—ã -> @Yaroslav_2500'
            )
            if photo:
                for i in photo:
                    media.add_photo(i)
            if videos:
                for i in videos:
                    media.add_video(i)
            try:
                await callback.message.answer_media_group(media=media.build())
            except Exception or exceptions.TelegramAPIError as e:
                logger.critical(f'–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ –ø–æ—Å—Ç—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è! {e}')
                await callback.message.answer(text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —á—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω—É'
                                                   ' -> @Yaroslav_2500')
            await asyncio.sleep(delay=2)
        await callback.message.answer(text='–ß—Ç–æ –±—ã —Å–Ω–æ–≤–∞ –ø–æ–ª—É—á–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Ä–∞–∑–º–µ—Ä—ã, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ'
                                           '–≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É: \n /menu')
    else:
        await callback.message.answer(text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –¥–∞–Ω–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ –ø–æ–∫–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏.')
        await callback.answer()
        await callback.message.answer(text='–ß—Ç–æ –±—ã —Å–Ω–æ–≤–∞ –ø–æ–ª—É—á–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Ä–∞–∑–º–µ—Ä—ã, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ'
                                           '–≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É: \n /menu')
